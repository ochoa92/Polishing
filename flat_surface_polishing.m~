% =========================================================================
% Project Name: TOOLING4G - Polishing
% Author      : HÃ©lio Ochoa
% Description : 
% =========================================================================
clear all;
clc;
close all;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Get pattern from a file
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
A = importdata('/home/helio/kst/polishing/patterns/polishing_pattern');
% t p_x p_y p_z Qx Qy Qz Qw Fx_EE Fy_EE Fz_EE Fx_O Fy_O Fz_O

% pattern position in Base frame
Ppattern = [A.data(:,2) A.data(:,3) A.data(:,4)]';  % p = [px py pz]';

% pattern orientation in Base frame
Qpattern = [A.data(:,8) A.data(:,5) A.data(:,6) A.data(:,7)];   % Q = [qw qx qy qz];
Rpattern = quat2rotm(Qpattern);

% pattern offsets
offset = ones(size(Ppattern)-1);
for i = 1:(size(Ppattern,2)-1)
   offset(1,i) = Ppattern(1,i+1) - Ppattern(1,i);
   offset(2,i) = Ppattern(2,i+1) - Ppattern(2,i);
   offset(3,i) = Ppattern(3,i+1) - Ppattern(3,i);
end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Get the limit points of the mold work-space from a file
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
P = importdata('/home/helio/kst/polishing/planes/mould_points');
P1 = P(1,:);
P2 = P(2,:);
P3 = P(3,:);
P4 = P(4,:);

% Compute the mold rotation 
Rmold = points2Rotation(P1', P2', P4');

% Compute the desired rotation in all points of the work-space
Rd = Rmold * Rpattern(:,:,1);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Build the point grid of the mold work-space
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
delta_synthetic = [0, 0, -0.001];
Nx = 5;
Ny = 5;
p_grid = moldWorkSpace(P1 ,P2, P4, delta_synthetic, Nx, Ny);

% %% Execution of the pattern in one the work-space points   
% pd = ones(3,size(offset,2));
% pd(:,1) = p(size(p,1),:)';
% for k = 1:size(offset,2)
%    pd(:,k+1) = pd(:,k) + Rmould * offset(:,k);
% end
% 
% %% define work-space limits
% 
% % distances between the 4 points 
% l12 = P2 - P1;
% l23 = P3 - P2;
% l34 = P4 - P3;
% l41 = P1 - P4;
% 
% % distances between the pattern and the 4 points
% l1P = [];
% l2P = [];
% l3P = [];
% l4P = [];
% 
% new_pd = [];
% for i = 1:size(pd,2)
%    l1P(:,i) = pd(:,i) - P1';
%    l2P(:,i) = pd(:,i) - P2';
%    l3P(:,i) = pd(:,i) - P3';
%    l4P(:,i) = pd(:,i) - P4';
%    
%    % signal between the 2 vectors
%    theta1 = dot(l1P(:,i),l12);
%    theta2 = dot(l2P(:,i),l23);
%    theta3 = dot(l3P(:,i),l34);
%    theta4 = dot(l4P(:,i),l41);
%     
%    if theta1 >= 0.0 && theta2 >= 0.0 && theta3 >= 0.0 && theta4 >= 0.0
%        new_pd = [new_pd, pd(:,i)];
%    end
%    
% end


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% plot
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

figure(1);
hold on;

% mold work-space
mold_ws = [P1;P2;P3;P4;P1];
plot3(mold_ws(:,1), mold_ws(:,2), mold_ws(:,3), '--r')
plot3(P1(:,1), P1(:,2), P1(:,3), 'or')
plot3(P2(:,1), P2(:,2), P2(:,3), 'or')
plot3(P3(:,1), P3(:,2), P3(:,3), 'or')
plot3(P4(:,1), P4(:,2), P4(:,3), 'or')

% pattern in robot base frame
plot3(Ppattern(1,:), Ppattern(2,:), Ppattern(3,:), '.r');

grid on;
xlabel('x');
ylabel('y');
zlabel('z');
title('End-Effector position in Base frame and Mold WS');
legend('mold_{WS}', 'P1', 'P2', 'P3', 'P4', 'pattern');


figure(2);
hold on;
plot3(mold_ws(:,1), mold_ws(:,2), mold_ws(:,3), '--r')
plot3(P1(:,1), P1(:,2), P1(:,3), 'or')
plot3(P2(:,1), P2(:,2), P2(:,3), 'or')
plot3(P3(:,1), P3(:,2), P3(:,3), 'or')
plot3(P4(:,1), P4(:,2), P4(:,3), 'or')
grid on;
xlabel('x');
ylabel('y');
zlabel('z');

% point grid of the mold work-space
scatter3(p_grid(:,1), p_grid(:,2), p_grid(:,3), 'og');


K = 0.05;
quiver3(Pmold(1,n), Pmold(2,n), Pmold(3,n), K*Rmold(1,1,n), K*Rmold(2,1,n), K*Rmold(3,1,n), 'r', 'linewidth',2)
quiver3(Pmold(1,n), Pmold(2,n), Pmold(3,n), K*Rmold(1,2,n), K*Rmold(2,2,n), K*Rmold(3,2,n), 'g', 'linewidth',2)
quiver3(Pmold(1,n), Pmold(2,n), Pmold(3,n), K*Rmold(1,3,n), K*Rmold(2,3,n), K*Rmold(3,3,n), 'b', 'linewidth',2)
  

% % desired rotation axis
% K_axis = 0.05;
% plot3([P1(1),P1(1)+K_axis*Rmould(1,1)], [P1(2),P1(2)+K_axis*Rmould(2,1)], [P1(3),P1(3)+K_axis*Rmould(3,1)],'r', 'LineWidth', 2);
% plot3([P1(1),P1(1)+K_axis*Rmould(1,2)], [P1(2),P1(2)+K_axis*Rmould(2,2)], [P1(3),P1(3)+K_axis*Rmould(3,2)],'g', 'LineWidth', 2);
% plot3([P1(1),P1(1)+K_axis*Rmould(1,3)], [P1(2),P1(2)+K_axis*Rmould(2,3)], [P1(3),P1(3)+K_axis*Rmould(3,3)],'b', 'LineWidth', 2);
% 
% % points pattern
% plot3(pd(1,:), pd(2,:), pd(3,:), '.r')
% plot3(new_pd(1,:), new_pd(2,:), new_pd(3,:), '.g')
% legend('mould work-space', 'plane', 'Rm_{x}', 'Rm_{y}', 'Rm_{z}', 'pattern', 'pattern inside ws');
% title('End-Effector position in mould frame');
